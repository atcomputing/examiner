<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by convertproefexamentoxml.pl -->
<exam>
  <item>
    <question>When running your app on a device with 240 dots per inch, which of the following screen resolutions will the device need to use the layout specified in &lt;font face="monospace"&gt;res/layout-sw720dp/&lt;/font&gt;?</question>
    <choice>&lt;font face="monospace"&gt;240&amp;nbsp;x&amp;nbsp;320&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;720&amp;nbsp;x&amp;nbsp;1280&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;800&amp;nbsp;x&amp;nbsp;1280&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;1920&amp;nbsp;x&amp;nbsp;1080&lt;/font&gt;</choice>
    <correct_answer>&lt;font face="monospace"&gt;1920&amp;nbsp;x&amp;nbsp;1080&lt;/font&gt;</correct_answer>
    <hint>&lt;font face="monospace"&gt;sw720dp&lt;/font&gt; stands for smallest width 720 density independent pixels. To calculate the actual screen pixels you need to use the following formula: &lt;font face="monospace"&gt;dp&amp;nbsp;*&amp;nbsp;(&amp;nbsp;dpi&amp;nbsp;/&amp;nbsp;160&amp;nbsp;)&lt;/font&gt;</hint>
    <type>multiple choice</type>
  </item>
  <item>
    <question>Which of the following describes the correct order in which the callback methods in an activity gets called when the orientation of the device changes from portrait to landscape?</question>
    <choice>&lt;font face="monospace"&gt;onPause()&lt;/font&gt;, &lt;font face="monospace"&gt;onResume()&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;onCreate()&lt;/font&gt;, &lt;font face="monospace"&gt;onStart()&lt;/font&gt;, &lt;font face="monospace"&gt;onResume()&lt;/font&gt;, &lt;font face="monospace"&gt;onPause()&lt;/font&gt;, &lt;font face="monospace"&gt;onStop()&lt;/font&gt;, &lt;font face="monospace"&gt;onDestroy()&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;onPause()&lt;/font&gt;, &lt;font face="monospace"&gt;onStop()&lt;/font&gt;, &lt;font face="monospace"&gt;onDestroy()&lt;/font&gt;, &lt;font face="monospace"&gt;onCreate()&lt;/font&gt;, &lt;font face="monospace"&gt;onStart()&lt;/font&gt;, &lt;font face="monospace"&gt;onResume()&lt;/font&gt;</choice>
    <choice>&lt;font face="monospace"&gt;onPause()&lt;/font&gt;, &lt;font face="monospace"&gt;onStop()&lt;/font&gt;, &lt;font face="monospace"&gt;onStart()&lt;/font&gt;, &lt;font face="monospace"&gt;onResume()&lt;/font&gt;</choice>
    <correct_answer>&lt;font face="monospace"&gt;onPause()&lt;/font&gt;, &lt;font face="monospace"&gt;onStop()&lt;/font&gt;, &lt;font face="monospace"&gt;onDestroy()&lt;/font&gt;, &lt;font face="monospace"&gt;onCreate()&lt;/font&gt;, &lt;font face="monospace"&gt;onStart()&lt;/font&gt;, &lt;font face="monospace"&gt;onResume()&lt;/font&gt;</correct_answer>
    <hint>To accomodate an orientation change Android will need to setup the view for the new orientation. Creating the view should be done in the &lt;font face="monospace"&gt;onCreate()&lt;/font&gt; method. Hence, the activity will be started as if it were a new activity. The current activity will of course first be stopped.</hint>
    <type>multiple choice</type>
  </item>
  <item>
    <question>Which of the following are true?</question>
    <choice>Fragments must always be embedded in an activity</choice>
    <choice>Each graphical screen in your App belongs to an activity</choice>
    <choice>When downloading a large datafile using a wireless connection you should not worry about battery status</choice>
    <choice>Ease of programming should always be more important than the user experience of your application</choice>
    <correct_answer>Fragments must always be embedded in an activity</correct_answer>
    <correct_answer>Each graphical screen in your App belongs to an activity</correct_answer>
    <hint>Users will not appreciate it if your application will drain the battery by doing something that could have been done at another time. In such cases it is better to notify the user and ask the user if the application should proceed. Remember that most users do not want to be bothered with details so you should make the whole experience as easy as possible and provide a sane default. In this case the default should probably be, not downloading the datafile when battery status is low.</hint>
    <type>multiple choice</type>
  </item>
  <item>
    <question>You notice that a &lt;font face="monospace"&gt;ListView&lt;/font&gt; using checkboxes in each row does not maintain the state of the checkboxes correctly.&lt;br/&gt;When you check the checkbox in the first row of the listview and scroll down you notice that other rows also have&lt;br/&gt;their checkboxes checked. Which of the following is most likely the problem?</question>
    <choice>It must be a bug in the Android System.</choice>
    <choice>The rows in a listview are cached and reused. The programmer created a custom adapter and is probably not aware of this phenomenon and did not add code to set the states explicitly.</choice>
    <choice>In a listview you can only use a textview and/or an imageview.</choice>
    <choice>You need to explicitly enable the listview for scrolling.</choice>
    <correct_answer>The rows in a listview are cached and reused. The programmer created a custom adapter and is probably not aware of this phenomenon and did not add code to set the states explicitly.</correct_answer>
    <hint>Memory and CPU power on many Android devices are limited. Therefore the Android system handles the available resources with great care.</hint>
    <type>multiple choice</type>
  </item>
  <item>
    <question>How fast should your application respond to user input events to prevent the &lt;i&gt;Application Not Responding (ANR)&lt;/i&gt; dialog?</question>
    <choice>Within 1 second</choice>
    <choice>Within 5 seconds</choice>
    <choice>Within 30 seconds</choice>
    <choice>Within 10 seconds</choice>
    <correct_answer>Within 5 seconds</correct_answer>
    <hint>The ANR dialog is shown when your application takes too long to respond to input events. This dialog should never been shown and its main purpose seems to be to force programmers to create responsive apps.</hint>
    <type>multiple choice</type>
  </item>
</exam>
